version: "3.8"

services:
  wordpress:
    image: wordpress:${WORDPRESS_VERSION:-php7.4-fpm}
    container_name: wordpress
    depends_on:
      - mysql
    environment:
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX:-wp_}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME:-wordpress}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST:-mysql}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD:-password}
      WORDPRESS_CONFIG_EXTRA: |
        define('FS_METHOD', 'direct');
    volumes:
      - ${WORDPRESS_DIR:-./core/wordpress}:/var/www/html
    ports:
      - "8000:80"
    restart: always
    networks:
      - wordpress-network

  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wordpress}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD:-no}
    volumes:
      - ${MYSQL_DIR:-./core/mysql}:/var/lib/mysql
    restart: always
    networks:
      - wordpress-network

  # nginx:
  #   build:
  #     context: ./nginx
  #   container_name: wp_nginx
  #   depends_on:
  #     - wordpress
  #   environment:
  #     CERTBOT_EMAIL: ${CERTBOT_EMAIL}
  #     ENVSUBST_VARS: FQDN
  #     FQDN: ${FQDN}
  #     STAGING: ${STAGING:-0}
  #     NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/user_conf.d
  #   ports:
  #     - 80
  #     - 443
  #   volumes:
  #     - ${WORDPRESS_DIR:-./core/wordpress}:/var/www/html
  #     - ${NGINX_LOG_DIR:-./core/logs/nginx}:/var/log/nginx
  #     - letsencrypt:/etc/letsencrypt
  #   restart: always
  #   networks:
  #     - wordpress-network

volumes:
  mysql: {}
  wordpress: {}
  letsencrypt:

networks:
  wordpress-network:
    driver: bridge
